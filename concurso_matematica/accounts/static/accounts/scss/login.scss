$xs: 320px;
$sm: 576px;
$md: 768px;
$lg: 992px;
$xl: 1200px;
$primary: #FFB47B;
$accent: #F78640;
@mixin xs{
    @media screen and (min-width: $xs) {
       @content; 
    }
}

@mixin sm{
    @media screen and (min-width: $sm) {
       @content; 
    }
}
@mixin md{
    @media screen and (min-width: $md) {
       @content; 
    }
}
@mixin lg{
    @media screen and (min-width: $lg) {
       @content; 
    }
}
@mixin xl{
    @media screen and (min-width: $xl) {
       @content; 
    }
}




html, body{
    box-sizing: border-box;
} 

body * {
    box-sizing: inherit;
}

body{
    margin: 0;
    padding: 0;
    display: flex;
    background-color: $primary;

}

.login-area {
    padding: 1rem 2rem;
    background-color: rgba(196, 196, 196, 0.5);
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    border-radius: 10px;
    background-color: white;
    border: $accent 2px solid;
    
    #buttons-area{
        
        margin-top: 1rem;
        display: flex;
        justify-content: center;

        a{
            
  
        }

        a, button[type="submit"]{
            text-align: center;
            display: inline-block;
            background-color: $primary;
            color: white;
            padding: .3rem;
            border-radius: 15px;
            margin: 0 1rem;
            width: 80px;
            transition: background .4s ease;
            &:hover{
                background-color: $accent;
            }
        }

        button[type="submit"]{
            outline: none;
            border: none;
            box-shadow: none;
        }
    }


    .image-area{
        text-align: center;
        margin: .6rem 0;
        svg{
            fill: white;
            display: inline-block;
            padding: .6rem;
            width: 70px;
            height: 70px;
            object-position: center;
            object-fit: cover;
            border-radius: 50%;
            background-color: $primary;
        }
        
    }
    .credential-box{
        display: flex;
        align-items: center;
    }
 
   
    #links-area{
        margin-top: 1rem;
        a{
            transition: color .4s ease;
            color: $primary;
            text-decoration: none;
            &:hover{
                color: $accent;

            }
        }
    }
    
    
    .credential-box{
        margin: .6rem auto;

        .credential-wrapper{
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
    }
    
}


    
      /**
      * Make the field a flex-container, reverse the order so label is on top.
      */
       
      .field {
        box-sizing: border-box;
        display: flex;
        flex-flow: column-reverse;
        margin-bottom: 1em;
        width: 50%;
        font-size: .8em;

        @include md {
            width: 100%;
        }

        &:not(:first-child):not(:last-child){
            padding: 0 .6em;

            @include md {
                padding: 0;
            }
        }
        &:first-child {
            padding-right: .6em;
        }
        &:last-child {
            padding-left: .6em;
        }

       
        
      /**
      * Add a transition to the label and input.
      * I'm not even sure that touch-action: manipulation works on
      * inputs, but hey, it's new and cool and could remove the 
      * pesky delay.
      */
      label, input {
        transition: all 0.2s;
        touch-action: manipulation;
        
      }
      
      input {

        background-color: white;
        color: black;
        font-size: 1.5em;
        border: 0;
        border-bottom: 3px solid white;
        border-bottom-left-radius: 10px;
        border-bottom-right-radius: 10px;
        font-family: inherit;
        -webkit-appearance: none;
        border-radius: 0;
        border-bottom: 2px solid $primary;
        padding: 0;
        cursor: text;
        
      }
      
      input:focus {
        outline: 0;
        border-bottom: 2px solid #F78640;
      }
      
      label {

        text-transform: uppercase;
        letter-spacing: 0.05em;
        color: black;
        font-size: .8em !important;  
        
      }
      /**
      * Translate down and scale the label up to cover the placeholder,
      * when following an input (with placeholder-shown support).
      * Also make sure the label is only on one row, at max 2/3rds of the
      * fieldâ€”to make sure it scales properly and doesn't wrap.
      */
      input:placeholder-shown + label, textarea:placeholder-shown + label {
        cursor: text;
        
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        transform-origin: left bottom;
        transform: translate(0, 2.125rem) scale(1.5);
      }
      /**
      * By default, the placeholder should be transparent. Also, it should 
      * inherit the transition.
      */
      ::-webkit-input-placeholder {
        opacity: 0;
        transition: inherit;
      }
      /**
      * Show the placeholder when the input is focused.
      */
      input:focus::-webkit-input-placeholder {
        opacity: 1;
      }
      /**
      * When the element is focused, remove the label transform.
      * Also, do this when the placeholder is _not_ shown, i.e. when 
      * there's something in the input at all.
      */
      input:not(:placeholder-shown) + label,
      input:focus + label {
        transform: translate(0, 0) scale(1);
        cursor: pointer;
        display: flex;
        justify-content: start;
        width: fit-content !important;
        background-color: $accent;
        color: white;
        font-weight: bolder;
        border-radius: 5px;
        padding: 0 .4em;

      }



    }
    